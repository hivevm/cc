plugins {
  id 'com.gradle.plugin-publish' version '1.3.0'
  id "org.hivevm.cc" version "1.0.4"
  id 'java-gradle-plugin'
  id 'maven-publish'
}


// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'java-gradle-plugin'


repositories {
  mavenLocal()
  mavenCentral()
}


version = '1.0.4'
group	= 'org.hivevm'


java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}


allprojects {
    tasks.withType(Javadoc).all { enabled = false }
}


dependencies {
  implementation gradleApi()

  // Use JUnit test framework
  // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.3'
}


sourceSets {
  main {
    java {
      srcDirs += 'src/main/gradle'
      srcDirs += 'src/main/generated'
    }
    resources {
    }
  }
/*  test {
    java {
      compileClasspath += configurations.compileOnly
      runtimeClasspath += configurations.compileOnly
    }
  }
*/}

jar {
	manifest {
		attributes 'Implementation-Title': 'HiveVM Compiler Compiler'
		attributes 'Implementation-Version': project.version
	}
	
	exclude('JavaCC.jj')
	exclude('JJTree.jjt')
}


// Configured to publish your plugin to the plugin portal
gradlePlugin {
  website = 'https://www.hivevm.org'
  vcsUrl  = 'https://github.com/hivevm/cc.git'
  plugins {
    create("gradle") {
      id = 'org.hivevm.cc'
      displayName = 'HiveVM CC'
      description = 'HiveVM parser generator for Java/C++/Rust'
      implementationClass = 'org.hivevm.gradle.HiveCCPlugin'
      tags.set(["hivevm", "compiler-compiler", "parser generator"])
    }
  }
}


parserProject {
  target       = 'java'
  output       = 'src/main/generated'

  task {
    name       = 'tree'
    jjtFile    = 'src/main/resources/JJTree.jjt'
    treeNodes  = [ 'BNF', 'BNFAction', 'BNFDeclaration', 'BNFNodeScope',
      'ExpansionNodeScope', 'NodeDescriptor', 'OptionBinding' ]
  }

  task {
    name       = 'parser'
    jjFile     = 'src/main/resources/JavaCC.jj'
  }

  // task {
  //   name       = 'oql4java'
  //   output     = '/data/smartIO/develop/parser/parser/src/main/java'
  //   jjtFile    = '/data/smartIO/develop/parser/parser/src/main/resources/it/smartio/text/parser/OQL.jjt'
  // }

  // task {
  //   name       = 'oql4cpp'
  //   target     = 'cpp'
  //   output     = '/data/smartIO/develop/core-cpp/text/parser'
  //   jjtFile    = '/data/smartIO/develop/parser/parser/src/main/resources/it/smartio/text/parser/OQL-Cpp.jjt'
  // }
}
